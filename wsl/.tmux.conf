set -g default-command "cd $(pwsh.exe -c 'Write-Host -NoNewLine \$env:userprofile' | xargs -0 wslpath); exec pwsh.exe --nologo"
set-window-option -g automatic-rename off
bind c new-window
bind a new-window "cd $(pwsh.exe -c 'Write-Host -NoNewLine \$env:userprofile' | xargs -0 wslpath); exec wsl.exe" \; rename-window "arch"

# Give this tmux a "PowerShell blue" color to differentiate it
#set -g status-bg blue

# Mouse support
set -g mouse on
#bind-key M \ send-keys -M


# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# Increase tmux messages display duration from 750ms to 3s
set -g display-time 3000
set -g display-panes-time 800 # slightly longer pane indicators display time
set -g repeat-time 750

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Set true colors
set-option -ga terminal-overrides ",*256col*:Tc"
#set-option -sa terminal-overrides ",xterm*:Tc"
set-option -g focus-events on

# Use UTF8
set -qg utf8
set-window-option -qg utf8 on

# Set vi-mode
set-window-option -g mode-keys vi
set-window-option -g status-keys emacs
#bind-key -n : set -o emacs\; command-prompt -p ":" \;

# ^ Keybindings
bind Enter copy-mode # enter copy mode

unbind C-v
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line


# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# switch panes using Alt-arrow without prefix
#bind -n M-Left select-pane -L
#bind -n M-Right select-pane -R
#bind -n M-Up select-pane -U
#bind -n M-Down select-pane -D

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# Bind r to source this file
unbind r
#bind r source ~/.tmux.conf
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Recommended, to avoid the Ctrl+B finger-gymnastics
# Change default prefix to Screen's
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix
bind-key -n C-Space send-prefix
bind C-Space last-window

# Maybe later C-S-J C-S-K
#bind-key -n C-Tab next-window
#bind-key -n C-S-Tab previous-window
bind-key -n -r C-J previous-window
bind-key -n -r C-K next-window

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history


#if you want tmux to pass along these (and other) xterm-style key sequences to programs running inside tmux, then you will need to enable the xterm-keys window option.
set-option -gw xterm-keys on

setw -g aggressive-resize on
set -g word-separators " *?[]^(){}<>'\""



# Optional
# split panes using - and |
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

set -g history-limit 10000

set -g default-terminal "screen-256color"

# activity
set -g monitor-activity on
set -g visual-activity off

# Plugins
#set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'christoomey/vim-tmux-navigator'
#set -g @plugin 'tmux-plugins/tmux-yank'

set-option -g set-titles on # set terminal title

#set-option -g automatic-rename-format '#{b:pane_current_path}'
set -g allow-rename on

#Design Tweaks

# clock mode
setw -g clock-mode-colour colour1

# copy mode
#setw -g mode-style 'fg=colour1 bg=colour18 bold'
set -g mode-style 'reverse'

# Status bar customization
#set -g status-interval 4         # update the status bar every 10 seconds
#set -g status-position bottom
#set -g status-left-length 200     # increase length (from 10)
#set -g status-style 'bg=default'  # transparent background

# Status bar widgets
#CLOCK='#[fg=colour2]#(date +%I)#[fg=colour240]:#[fg=colour2]#(date +%M) #(if [ `date +%p` = "AM" ]; then echo \#[fg=colour3]; else echo \#[fg=colour67]; fi)#(date +%p)'
UPTIME="up [#(uptime | awk -F'up' '{print \$2}' | sed 's/,.*//' | sed -E 's/^[[:space:]]*//')]"
 
#hamvocke config
set -g status-position bottom
set -g status-justify left
set -g status-style 'fg=colour1'
set -g status-left ''
#set -g status-right "%Y-%m-%d %H:%M"
set -g status-right "$UPTIME"
set -g status-right-length 50
set -g status-left-length 10

setw -g window-status-current-style 'fg=colour0 bg=colour1 bold'
setw -g window-status-current-format ' #I #W #F '

setw -g window-status-style 'fg=colour1 dim'
setw -g window-status-format ' #I #[fg=colour7]#W #[fg=colour1]#F '

setw -g window-status-bell-style 'fg=colour2 bg=colour1 bold'

# messages
set -g message-style 'fg=colour2 bg=colour0 bold'
#End of hamvocke config

# STATUS BAR STYLE 1 - PLAIN
#set -g status-left "#[fg=#b4befe,bg=default]  #S #[fg=#45475a,bg=default]|"
#set -g status-right "#[fg=#eba0ac,bg=default]#{?window_zoomed_flag, ,} #[fg=#45475a,bg=default]|#[fg=#f2dcdc,bg=default] %m/%d/%y "
#set -g window-status-current-format '#[fg=#b4befe,bg=default] #I#W'
#set -g window-status-format '#[fg=gray,bg=default] #I #W'

# STATUS BAR STYLE 2 - BUBBLES
#set -g status-left '#[fg=#2b2a30,bg=default]#[fg=#b4befe,bg=#2b2a30]  #S #[fg=#2b2a30,bg=default]#[fg=#45475a,bg=default] |'
#set -g status-right '#[fg=#2b2a30,bg=default] #[fg=#eba0ac,bg=#2b2a30]#{?window_zoomed_flag,,}#[fg=#2b2a30,bg=default] #[fg=#45475a,bg=default]| #[fg=#2b2a30,bg=default]#[fg=#f2dcdc,bg=#2b2a30]%m/%d/%y#[fg=#2b2a30,bg=default]'
#set -g window-status-current-format '#[fg=#2b2a30,bg=default] #[fg=#b4befe,bg=#2b2a30]#I#W#[fg=#2b2a30,bg=default]'
#set -g window-status-format '#[fg=gray,bg=default]  #I #W '


set -g window-status-last-style 'fg=white,bg=default'
set -g pane-border-style 'fg=#b4befe'
set -g pane-active-border-style 'fg=#b4befe'
set -g default-terminal "${TERM}"
set -g message-command-style bg=default,fg=#f2dcdc #vi style in the command area
#set -g message-style bg=default,fg=#f2dcdc
#set -g mode-style bg=default,fg=#f2dcdc #vim mode colours / or selection top right colour




#bind-key -n WheelUpPane \
#if-shell -Ft= "#{?pane_in_mode,1,#{?mouse_button_flag}}" \
#"send-keys -Mt=; send-keys -Mt=; send-keys -Mt=" \
#"if-shell -Ft= '#{alternate_on}' \
#'send-keys -t= Up Up Up' \
#'copy-mode -et='"
#
#bind-key -n WheelDownPane \
#if-shell -Ft= “#{?pane_in_mode,1,#{?mouse_button_flag,1,#{?alternate_on,0,1}}}” \
#“send-keys -Mt=; send-keys -Mt=; send-keys -Mt=” \
#“send-keys -t= Down Down Down”


#bind-key -n WheelUpPane \
#    if-shell -Ft= "#{?pane_in_mode,1,#{mouse_button_flag}}" \
#        "send-keys -Mt=; send-keys -Mt=; send-keys -Mt=" \
#        "if-shell -Ft= '#{alternate_on}' \
#            'send-keys -t= Up Up Up' \
#            'copy-mode -et='"
#
#bind-key -n WheelDownPane \
#    if-shell -Ft= "#{?pane_in_mode,1,#{mouse_button_flag,1,#{?alternate_on,0,1}}}" \
#        "send-keys -Mt=; send-keys -Mt=; send-keys -Mt=; " \
#        "send-keys -t Down Down Down"
#
#bind-key -n SecondClick1 \ send-keys -Mt


#bind-key -n WheelUpPane \
#    if-shell -Ft= "#{?pane_in_mode,1,#{mouse_button_flag}}" \
#        "send-keys -M" \
#        "if-shell -Ft= '#{alternate_on}' \
#            'send-keys Up Up Up' \
#            'copy-mode'"
#
#bind-key -n WheelDownPane \
#    if-shell -Ft= "#{?pane_in_mode,1,#{mouse_button_flag}}" \
#        "send-keys -M" \
#        "send-keys Down Down Down"


########################
##### MOUSE CONFIG #####
########################

set -gq mouse on

bind-key -n WheelUpPane \
	if-shell -Ft= "#{?pane_active,0,1}" "select-pane -t=" \; \
	if-shell -Ft= "#{pane_in_mode}" \
		"send-keys -M ; send-keys -M ; send-keys -M" \
		"if-shell -Ft= \"#{mouse_any_flag}\" \
			\"send-keys -M\" \
			\"if-shell -Ft= '#{alternate_on}' \
				'send-keys Up Up Up' \
				'copy-mode -e'\""

bind-key -n WheelDownPane \
	if-shell -Ft= "#{?pane_active,0,1}" "select-pane -t=" \; \
	if-shell -Ft= "#{pane_in_mode}" \
		"send-keys -M ; send-keys -M ; send-keys -M" \
		"if-shell -Ft= \"#{mouse_any_flag}\" \
			\"send-keys -M\" \
			\"if-shell -Ft= '#{alternate_on}' \
				'send-keys Down Down Down'\""

bind-key -n MouseDrag1Pane \
	if-shell -Ft= "#{mouse_any_flag}" \
		"if-shell -Ft= '#{pane_in_mode}' 'copy-mode -eM' 'send-keys -M'" \
		"copy-mode -eM"


# paste with middle click
bind-key -n MouseDown2Pane run "(xsel -o || pbpaste) 2>/dev/null | tmux load-buffer - ; tmux paste-buffer"

# double click to select and copy word in normal mode if mouse is not handled
bind-key -n DoubleClick1Pane \
	if-shell -Ft= "#{mouse_any_flag}" \
		"send-keys -M" \
		"select-pane \; copy-mode -e \; send-keys -X select-word \; send-keys -X copy-pipe '(xsel -ip || pbcopy) 2>/dev/null'"

# tripple click to select and copy line in normal mode if mouse is not handled
bind-key -n TripleClick1Pane \
	if-shell -Ft= "#{mouse_any_flag}" \
		"send-keys -M" \
		"select-pane \; copy-mode -e \; send-keys -X select-line \; send-keys -X copy-pipe '(xsel -ip || pbcopy) 2>/dev/null'"

# drag & drop windows on status line by mouse
bind-key -n MouseDrag1Status swap-window -t=

# new window by right click on status line
bind-key -n MouseDown3Status new-window -a -t= -c '#{pane_current_path}'

# new window in background by middle click on status line
bind-key -n MouseDown2Status new-window -ad -t= -c '#{pane_current_path}'

# don't scroll to bottom after mouse select
# wrokaround for selection being unselected on DragEnd
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "(xsel -ip || pbcopy) 2>/dev/null"

# deselect with mouse click
bind-key -T copy-mode-vi MouseDown1Pane select-pane \; send-keys -X clear-selection

# exit from copy-mode with right-click
unbind-key -n MouseDown3Pane
bind-key -T copy-mode-vi MouseDown3Pane select-pane \; send-keys -X copy-selection-and-cancel

# old mouse handling (tmux 2.0 and before)
set -gq mouse-resize-pane on
set -gq mouse-select-pane on
set -gq mouse-select-window on


## better scrolling behavior
  bind-key -n WheelUpPane if-shell -F "#{alternate_on}" \
    "if-shell -F \"#{mouse_any_flag}\" \
      \"send-key -M\" \
      \"send-key -N 3 Up\"" \
    "copy-mode -e ; send-key -M"
  bind-key -n WheelDownPane if-shell -F "#{alternate_on}" \
    "if-shell -F \"#{mouse_any_flag}\" \
      \"send-key -M\" \
      \"send-key -N 3 Down\"" \
    "if-shell -F \"#{pane_in_mode}\" \
      \"send-key -M\""
  bind-key -n PageUp if-shell -F "#{alternate_on}" \
    "send-key PageUp" \
    "if-shell -F \"#{pane_in_mode}\" \
      \"send-key PageUp\" \
      \"copy-mode -eu\""



bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-no-clear pbcopy
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-no-clear pbcopy








unbind-key -T copy-mode-vi MouseDragEnd1Pane

# Scroll 3 lines at a time instead of default 5; don't extend dragged selections.
bind-key -T copy-mode-vi WheelUpPane select-pane\; send-keys -t'{mouse}' -X clear-selection\; send-keys -t'{mouse}' -X -N 3 scroll-up
bind-key -T copy-mode-vi WheelDownPane select-pane\; send-keys -t'{mouse}' -X clear-selection\; send-keys -t'{mouse}' -X -N 3 scroll-down

# Make double and triple click work outside of copy mode (already works inside it with default bindings).
bind-key -T root DoubleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-word"
bind-key -T root TripleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-line"

# Don't exit copy mode on double or triple click.
bind-key -T copy-mode-vi DoubleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-word"
bind-key -T copy-mode-vi TripleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-line"

# For those times when C-c and q are not enough.
bind-key -T copy-mode-vi Escape send-keys -X cancel
